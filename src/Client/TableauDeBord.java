/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Client;

import Client.Adherents.AddAdherent;
import Client.Adherents.EditAdherent;
import Client.Adherents.JTableModelAdherent;
import Client.Bibliothecaire.AddBiblio;
import Client.Bibliothecaire.ConfSupprWithPass;
import Client.Bibliothecaire.EditBiblio;
import Client.Bibliothecaire.JTableModelBibliothecaire;
import Client.Emprunts.AddEmprunt;
import Client.Emprunts.JTableModelEmprunt;
import Client.Livres.AddBook;
import Client.Livres.BooleanCellRenderer;
import Client.Livres.DisponibiliteCellEditor;
import Client.Livres.EditBook;
import Client.Livres.JTableModelBooks;
import Client.Thread.Selected;
import Metier.Adherent;
import Metier.AdherentService;
import Metier.Bibliothecaire;
import Metier.Bibliotheque;
import Metier.Emprunt;
import Metier.EmpruntService;
import Metier.Livre;
import Metier.LivreService;
import Metier.MetierServiceFactory;
import java.awt.event.KeyEvent;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author drouinjonathan
 */
public class TableauDeBord extends javax.swing.JFrame {

    private Bibliothecaire bibliothecaireConnecte = null;
    private Bibliotheque bibliotheque = MetierServiceFactory.getBibliotheque();
    private LivreService livreMetierService = MetierServiceFactory.getLivreService();
    private AdherentService adherentMetierService = MetierServiceFactory.getAdherentService();
    private EmpruntService empruntMetierService = MetierServiceFactory.getEmpruntService();
    private JTableModelBooks books = null;
    private JTableModelAdherent adherents = null;
    private JTableModelEmprunt emprunts = null;
    private JTableModelBibliothecaire bibliothecaires = null;
    private Livre selectedL;
    private Adherent selectedA;
    private Emprunt selectedE;
    private Bibliothecaire selectedB;

    /**
     * Creates new form TableauDeBord
     */
    public TableauDeBord() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setExtendedState(this.getExtendedState() | TableauDeBord.MAXIMIZED_BOTH);
        this.bibliothecaireConnecte = this.bibliotheque.getBibliothecaireConnecte();
        if (this.bibliothecaireConnecte == null) {
            this.dispose();
        } else {
            jLabelBC.setText("Bibliothécaire connecté : " + bibliothecaireConnecte.getPrenom() + " " + bibliothecaireConnecte.getNom());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupCritereRechercheBooks = new javax.swing.ButtonGroup();
        buttonGroupCritereRechercheAdherent = new javax.swing.ButtonGroup();
        buttonGroupCritereRechercheEmprunt = new javax.swing.ButtonGroup();
        jPanelDetails = new javax.swing.JPanel();
        jLabelBC = new javax.swing.JLabel();
        jButtonQuit = new javax.swing.JButton();
        jTabbedPanePrincipal = new javax.swing.JTabbedPane();
        jPanelMenuEmprunts = new javax.swing.JPanel();
        jButtonAddEmprunt = new javax.swing.JButton();
        jPanelBarSearchEmprunt = new javax.swing.JPanel();
        jSeparator12 = new javax.swing.JSeparator();
        jSeparator13 = new javax.swing.JSeparator();
        jPanel8 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabelNbFoundEmprunt = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jTextFieldSearchEmprunt = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jRadioButtonEmpruntByAdherent = new javax.swing.JRadioButton();
        jRadioButtonEmpruntByDate = new javax.swing.JRadioButton();
        jRadioButtonIdEmprunt = new javax.swing.JRadioButton();
        jRadioButtonEmpruntByLivre = new javax.swing.JRadioButton();
        jPanel10 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jButton1ForEmprunt = new javax.swing.JButton();
        jButton1BackEmprunt = new javax.swing.JButton();
        jButton5BackEmprunt = new javax.swing.JButton();
        jButton5ForEmprunt = new javax.swing.JButton();
        jLabelNumPageEmprunt = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jComboBoxNbPerPageEmprunt = new javax.swing.JComboBox();
        jLabel17 = new javax.swing.JLabel();
        jSeparator15 = new javax.swing.JSeparator();
        jPanelEmprunt = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableEmprunt = new javax.swing.JTable();
        jPanelEmpruntSelected = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jLabelEmpruntSelected = new javax.swing.JLabel();
        jButtonDelEmprunt = new javax.swing.JButton();
        jSeparator16 = new javax.swing.JSeparator();
        jPanelMenuLivres = new javax.swing.JPanel();
        jButtonAddBook = new javax.swing.JButton();
        jButtonEditBook = new javax.swing.JButton();
        jPanelBarSearchBook = new javax.swing.JPanel();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        jPanel11 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldSearchLivre = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabelNbFoundLivre = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        jRadioButtonAutorLivre = new javax.swing.JRadioButton();
        jRadioButtonTitleLivre = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        jRadioButtonIdLivre = new javax.swing.JRadioButton();
        jRadioButtonAllLivre = new javax.swing.JRadioButton();
        jPanel13 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jComboBoxNbPerPageLivre = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        jButton1ForLivre = new javax.swing.JButton();
        jButton1BackLivre = new javax.swing.JButton();
        jButton5BackLivre = new javax.swing.JButton();
        jButton5ForLivre = new javax.swing.JButton();
        jLabelNumPageLivre = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jPanelLivres = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableLivres = new javax.swing.JTable();
        jPanelBookSelected = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabelLivreSelected = new javax.swing.JLabel();
        jButtonDelBook = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jPanelMenuAdherents = new javax.swing.JPanel();
        jButtonAddAdherent = new javax.swing.JButton();
        jButtonEditAdherent = new javax.swing.JButton();
        jPanelBarSearchAdherent = new javax.swing.JPanel();
        jSeparator7 = new javax.swing.JSeparator();
        jSeparator8 = new javax.swing.JSeparator();
        jPanel14 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jButton1ForAdherent = new javax.swing.JButton();
        jButton1BackAdherent = new javax.swing.JButton();
        jButton5BackAdherent = new javax.swing.JButton();
        jButton5ForAdherent = new javax.swing.JButton();
        jLabelNumPageAdherent = new javax.swing.JLabel();
        jComboBoxNbPerPageAdherent = new javax.swing.JComboBox();
        jPanel15 = new javax.swing.JPanel();
        jRadioButtonIdAdherent = new javax.swing.JRadioButton();
        jRadioButtonPrenomAdherent = new javax.swing.JRadioButton();
        jLabel9 = new javax.swing.JLabel();
        jRadioButtonNomAdherent = new javax.swing.JRadioButton();
        jPanel16 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jTextFieldSearchAdherent = new javax.swing.JTextField();
        jLabelNbFoundAdherent = new javax.swing.JLabel();
        jSeparator10 = new javax.swing.JSeparator();
        jPanelAdherent = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableAdherent = new javax.swing.JTable();
        jPanelAdherentSelected = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabelAdherentSelected = new javax.swing.JLabel();
        jButtonDelAdherent = new javax.swing.JButton();
        jSeparator11 = new javax.swing.JSeparator();
        jPanelMenuAdmin = new javax.swing.JPanel();
        jButtonAddBiblio = new javax.swing.JButton();
        jButtonEditBiblio = new javax.swing.JButton();
        jPanelBarSearchBiblio = new javax.swing.JPanel();
        jSeparator17 = new javax.swing.JSeparator();
        jSeparator18 = new javax.swing.JSeparator();
        jPanel1 = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        jComboBoxNbPerPageBiblio = new javax.swing.JComboBox();
        jPanel5 = new javax.swing.JPanel();
        jButton1ForBiblio = new javax.swing.JButton();
        jButton1BackBiblio = new javax.swing.JButton();
        jButton5BackBiblio = new javax.swing.JButton();
        jButton5ForBiblio = new javax.swing.JButton();
        jLabelNumPageBiblio = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jRadioButtonIdBiblio = new javax.swing.JRadioButton();
        jRadioButtonNomBiblio = new javax.swing.JRadioButton();
        jRadioButtonPrenomBiblio = new javax.swing.JRadioButton();
        jLabel21 = new javax.swing.JLabel();
        jRadioButtonLoginBiblio = new javax.swing.JRadioButton();
        jPanel7 = new javax.swing.JPanel();
        jTextFieldSearchBiblio = new javax.swing.JTextField();
        jLabelNbFoundBiblio = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jSeparator20 = new javax.swing.JSeparator();
        jPanelBiblio = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTableBiblio = new javax.swing.JTable();
        jPanelBiblioSelected = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();
        jLabelBiblioSelected = new javax.swing.JLabel();
        jButtonDelBiblio = new javax.swing.JButton();
        jSeparator21 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Centre de gestion de la bibliothèque");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabelBC.setFont(new java.awt.Font("Dialog", 2, 12)); // NOI18N
        jLabelBC.setText("Bibliothécaire connecté : -");

        jButtonQuit.setText("Déconnexion");
        jButtonQuit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonQuitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelDetailsLayout = new javax.swing.GroupLayout(jPanelDetails);
        jPanelDetails.setLayout(jPanelDetailsLayout);
        jPanelDetailsLayout.setHorizontalGroup(
            jPanelDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDetailsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelBC, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonQuit)
                .addContainerGap())
        );
        jPanelDetailsLayout.setVerticalGroup(
            jPanelDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDetailsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelBC, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                    .addComponent(jButtonQuit))
                .addContainerGap())
        );

        jTabbedPanePrincipal.setBackground(new java.awt.Color(255, 0, 102));
        jTabbedPanePrincipal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPanePrincipalMouseClicked(evt);
            }
        });

        jButtonAddEmprunt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/Emprunts/addEmprunt.png"))); // NOI18N
        jButtonAddEmprunt.setText("Emprunter un livre");
        jButtonAddEmprunt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddEmpruntActionPerformed(evt);
            }
        });

        jSeparator12.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jSeparator13.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel13.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        jLabel13.setText("Recherches :");

        jLabelNbFoundEmprunt.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabelNbFoundEmprunt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelNbFoundEmprunt.setText("Aucun emprunt n'a été cherché");

        jLabel14.setForeground(new java.awt.Color(255, 102, 0));
        jLabel14.setText("<- Appuyer sur Entrée");

        jTextFieldSearchEmprunt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldSearchEmpruntKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabelNbFoundEmprunt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextFieldSearchEmprunt, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel14)))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jTextFieldSearchEmprunt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelNbFoundEmprunt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel15.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        jLabel15.setText("Critères de recherches :");

        buttonGroupCritereRechercheEmprunt.add(jRadioButtonEmpruntByAdherent);
        jRadioButtonEmpruntByAdherent.setSelected(true);
        jRadioButtonEmpruntByAdherent.setText("Par adhérent (par nom)");

        buttonGroupCritereRechercheEmprunt.add(jRadioButtonEmpruntByDate);
        jRadioButtonEmpruntByDate.setText("Par date");

        buttonGroupCritereRechercheEmprunt.add(jRadioButtonIdEmprunt);
        jRadioButtonIdEmprunt.setText("Par identifiant");

        buttonGroupCritereRechercheEmprunt.add(jRadioButtonEmpruntByLivre);
        jRadioButtonEmpruntByLivre.setText("Par livre (par mots clés)");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRadioButtonIdEmprunt)
                            .addComponent(jRadioButtonEmpruntByLivre))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRadioButtonEmpruntByDate)
                            .addComponent(jRadioButtonEmpruntByAdherent))))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButtonIdEmprunt)
                    .addComponent(jRadioButtonEmpruntByAdherent))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButtonEmpruntByLivre)
                    .addComponent(jRadioButtonEmpruntByDate))
                .addContainerGap())
        );

        jButton1ForEmprunt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/1per1For.png"))); // NOI18N
        jButton1ForEmprunt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ForEmpruntActionPerformed(evt);
            }
        });

        jButton1BackEmprunt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/1per1Back.png"))); // NOI18N
        jButton1BackEmprunt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1BackEmpruntActionPerformed(evt);
            }
        });

        jButton5BackEmprunt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/5per5Back.png"))); // NOI18N
        jButton5BackEmprunt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5BackEmpruntActionPerformed(evt);
            }
        });

        jButton5ForEmprunt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/5per5For.png"))); // NOI18N
        jButton5ForEmprunt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ForEmpruntActionPerformed(evt);
            }
        });

        jLabelNumPageEmprunt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelNumPageEmprunt.setText("1");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton5BackEmprunt, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1BackEmprunt, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelNumPageEmprunt, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1ForEmprunt, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton5ForEmprunt, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1BackEmprunt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1ForEmprunt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton5BackEmprunt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton5ForEmprunt, javax.swing.GroupLayout.DEFAULT_SIZE, 47, Short.MAX_VALUE)
                    .addComponent(jLabelNumPageEmprunt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jLabel16.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        jLabel16.setText("Critère d'affichage :");

        jComboBoxNbPerPageEmprunt.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "10", "30", "50", "70", "90", "110", "130" }));
        jComboBoxNbPerPageEmprunt.setSelectedIndex(1);
        jComboBoxNbPerPageEmprunt.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxNbPerPageEmpruntItemStateChanged(evt);
            }
        });

        jLabel17.setText("emprunts par page");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBoxNbPerPageEmprunt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel17))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(jComboBoxNbPerPageEmprunt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanelBarSearchEmpruntLayout = new javax.swing.GroupLayout(jPanelBarSearchEmprunt);
        jPanelBarSearchEmprunt.setLayout(jPanelBarSearchEmpruntLayout);
        jPanelBarSearchEmpruntLayout.setHorizontalGroup(
            jPanelBarSearchEmpruntLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBarSearchEmpruntLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jSeparator12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jSeparator13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(67, Short.MAX_VALUE))
        );
        jPanelBarSearchEmpruntLayout.setVerticalGroup(
            jPanelBarSearchEmpruntLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBarSearchEmpruntLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelBarSearchEmpruntLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanelBarSearchEmpruntLayout.createSequentialGroup()
                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator13)
                    .addComponent(jSeparator12))
                .addContainerGap())
        );

        jTableEmprunt.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Identifiant", "Date", "Livre", "Adhérent"
            }
        ));
        jTableEmprunt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableEmpruntMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTableEmprunt);

        javax.swing.GroupLayout jPanelEmpruntLayout = new javax.swing.GroupLayout(jPanelEmprunt);
        jPanelEmprunt.setLayout(jPanelEmpruntLayout);
        jPanelEmpruntLayout.setHorizontalGroup(
            jPanelEmpruntLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelEmpruntLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3)
                .addContainerGap())
        );
        jPanelEmpruntLayout.setVerticalGroup(
            jPanelEmpruntLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelEmpruntLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 390, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel18.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        jLabel18.setText("Emprunt sélectionné :");

        jLabelEmpruntSelected.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelEmpruntSelected.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelEmpruntSelected.setText("Aucun");

        javax.swing.GroupLayout jPanelEmpruntSelectedLayout = new javax.swing.GroupLayout(jPanelEmpruntSelected);
        jPanelEmpruntSelected.setLayout(jPanelEmpruntSelectedLayout);
        jPanelEmpruntSelectedLayout.setHorizontalGroup(
            jPanelEmpruntSelectedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelEmpruntSelectedLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelEmpruntSelectedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanelEmpruntSelectedLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabelEmpruntSelected, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanelEmpruntSelectedLayout.setVerticalGroup(
            jPanelEmpruntSelectedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelEmpruntSelectedLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelEmpruntSelected, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jButtonDelEmprunt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/Adherents/adherentDel.png"))); // NOI18N
        jButtonDelEmprunt.setText("Rendre un livre");
        jButtonDelEmprunt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDelEmpruntActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelMenuEmpruntsLayout = new javax.swing.GroupLayout(jPanelMenuEmprunts);
        jPanelMenuEmprunts.setLayout(jPanelMenuEmpruntsLayout);
        jPanelMenuEmpruntsLayout.setHorizontalGroup(
            jPanelMenuEmpruntsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMenuEmpruntsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelMenuEmpruntsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator16)
                    .addComponent(jPanelEmprunt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelBarSearchEmprunt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanelMenuEmpruntsLayout.createSequentialGroup()
                        .addComponent(jButtonAddEmprunt)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonDelEmprunt, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanelEmpruntSelected, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jSeparator15))
                .addContainerGap())
        );
        jPanelMenuEmpruntsLayout.setVerticalGroup(
            jPanelMenuEmpruntsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMenuEmpruntsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelMenuEmpruntsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanelEmpruntSelected, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonDelEmprunt, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonAddEmprunt, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelBarSearchEmprunt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelEmprunt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPanePrincipal.addTab("Emprunts", jPanelMenuEmprunts);

        jButtonAddBook.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/Livres/livreAdd.png"))); // NOI18N
        jButtonAddBook.setText("Ajouter un livre");
        jButtonAddBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddBookActionPerformed(evt);
            }
        });

        jButtonEditBook.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/Livres/livreEdit.png"))); // NOI18N
        jButtonEditBook.setText("Modifier un livre");
        jButtonEditBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditBookActionPerformed(evt);
            }
        });

        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jSeparator4.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel1.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        jLabel1.setText("Recherches :");

        jTextFieldSearchLivre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldSearchLivreKeyTyped(evt);
            }
        });

        jLabel4.setForeground(new java.awt.Color(255, 102, 0));
        jLabel4.setText("<- Appuyer sur Entrée");

        jLabelNbFoundLivre.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabelNbFoundLivre.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelNbFoundLivre.setText("Aucun livre n'a été cherché");

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabelNbFoundLivre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextFieldSearchLivre, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4)))
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextFieldSearchLivre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelNbFoundLivre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        buttonGroupCritereRechercheBooks.add(jRadioButtonAutorLivre);
        jRadioButtonAutorLivre.setText("Par auteur");

        buttonGroupCritereRechercheBooks.add(jRadioButtonTitleLivre);
        jRadioButtonTitleLivre.setText("Par titre");

        jLabel3.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        jLabel3.setText("Critères de recherches :");

        buttonGroupCritereRechercheBooks.add(jRadioButtonIdLivre);
        jRadioButtonIdLivre.setText("Par identifiant");

        buttonGroupCritereRechercheBooks.add(jRadioButtonAllLivre);
        jRadioButtonAllLivre.setSelected(true);
        jRadioButtonAllLivre.setText("Par mots clés");

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRadioButtonAllLivre)
                            .addComponent(jRadioButtonAutorLivre))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRadioButtonTitleLivre)
                            .addComponent(jRadioButtonIdLivre)))
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButtonAllLivre)
                    .addComponent(jRadioButtonIdLivre))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButtonAutorLivre)
                    .addComponent(jRadioButtonTitleLivre))
                .addContainerGap())
        );

        jLabel5.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        jLabel5.setText("Critère d'affichage :");

        jLabel6.setText("livres par page");

        jComboBoxNbPerPageLivre.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "10", "30", "50", "70", "90", "110", "130" }));
        jComboBoxNbPerPageLivre.setSelectedIndex(1);
        jComboBoxNbPerPageLivre.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxNbPerPageLivreItemStateChanged(evt);
            }
        });

        jButton1ForLivre.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/1per1For.png"))); // NOI18N
        jButton1ForLivre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ForLivreActionPerformed(evt);
            }
        });

        jButton1BackLivre.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/1per1Back.png"))); // NOI18N
        jButton1BackLivre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1BackLivreActionPerformed(evt);
            }
        });

        jButton5BackLivre.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/5per5Back.png"))); // NOI18N
        jButton5BackLivre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5BackLivreActionPerformed(evt);
            }
        });

        jButton5ForLivre.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/5per5For.png"))); // NOI18N
        jButton5ForLivre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ForLivreActionPerformed(evt);
            }
        });

        jLabelNumPageLivre.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelNumPageLivre.setText("1");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton5BackLivre, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1BackLivre, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelNumPageLivre, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1ForLivre, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton5ForLivre, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1BackLivre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1ForLivre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton5BackLivre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton5ForLivre, javax.swing.GroupLayout.DEFAULT_SIZE, 47, Short.MAX_VALUE)
                    .addComponent(jLabelNumPageLivre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBoxNbPerPageLivre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6))
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jComboBoxNbPerPageLivre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanelBarSearchBookLayout = new javax.swing.GroupLayout(jPanelBarSearchBook);
        jPanelBarSearchBook.setLayout(jPanelBarSearchBookLayout);
        jPanelBarSearchBookLayout.setHorizontalGroup(
            jPanelBarSearchBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBarSearchBookLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(237, Short.MAX_VALUE))
        );
        jPanelBarSearchBookLayout.setVerticalGroup(
            jPanelBarSearchBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBarSearchBookLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelBarSearchBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanelBarSearchBookLayout.createSequentialGroup()
                        .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator4)
                    .addComponent(jSeparator3))
                .addContainerGap())
        );

        jTableLivres.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Identifiant", "Auteur", "Titre", "Disponible"
            }
        ));
        jTableLivres.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableLivresMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableLivres);

        javax.swing.GroupLayout jPanelLivresLayout = new javax.swing.GroupLayout(jPanelLivres);
        jPanelLivres.setLayout(jPanelLivresLayout);
        jPanelLivresLayout.setHorizontalGroup(
            jPanelLivresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLivresLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanelLivresLayout.setVerticalGroup(
            jPanelLivresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLivresLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 390, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel2.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        jLabel2.setText("Livre sélectionné :");

        jLabelLivreSelected.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelLivreSelected.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelLivreSelected.setText("Aucun");

        javax.swing.GroupLayout jPanelBookSelectedLayout = new javax.swing.GroupLayout(jPanelBookSelected);
        jPanelBookSelected.setLayout(jPanelBookSelectedLayout);
        jPanelBookSelectedLayout.setHorizontalGroup(
            jPanelBookSelectedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBookSelectedLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelBookSelectedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 643, Short.MAX_VALUE)
                    .addGroup(jPanelBookSelectedLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabelLivreSelected, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanelBookSelectedLayout.setVerticalGroup(
            jPanelBookSelectedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBookSelectedLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelLivreSelected, javax.swing.GroupLayout.DEFAULT_SIZE, 47, Short.MAX_VALUE)
                .addContainerGap())
        );

        jButtonDelBook.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/Livres/livreDel.png"))); // NOI18N
        jButtonDelBook.setText("Supprimer un livre");
        jButtonDelBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDelBookActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelMenuLivresLayout = new javax.swing.GroupLayout(jPanelMenuLivres);
        jPanelMenuLivres.setLayout(jPanelMenuLivresLayout);
        jPanelMenuLivresLayout.setHorizontalGroup(
            jPanelMenuLivresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMenuLivresLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelMenuLivresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator2)
                    .addComponent(jPanelLivres, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelBarSearchBook, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanelMenuLivresLayout.createSequentialGroup()
                        .addComponent(jButtonAddBook)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonEditBook)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonDelBook)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanelBookSelected, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jSeparator1))
                .addContainerGap())
        );
        jPanelMenuLivresLayout.setVerticalGroup(
            jPanelMenuLivresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMenuLivresLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelMenuLivresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jButtonDelBook, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE)
                    .addComponent(jButtonEditBook, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelBookSelected, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonAddBook, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelBarSearchBook, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelLivres, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPanePrincipal.addTab("Livres", jPanelMenuLivres);

        jButtonAddAdherent.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/Adherents/adherentAdd.png"))); // NOI18N
        jButtonAddAdherent.setText("Ajouter un adhérent");
        jButtonAddAdherent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddAdherentActionPerformed(evt);
            }
        });

        jButtonEditAdherent.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/Adherents/adherentEdit.png"))); // NOI18N
        jButtonEditAdherent.setText("Modifier un adhérent");
        jButtonEditAdherent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditAdherentActionPerformed(evt);
            }
        });

        jSeparator7.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jSeparator8.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel11.setText("adhérents par page");

        jLabel10.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        jLabel10.setText("Critère d'affichage :");

        jButton1ForAdherent.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/1per1For.png"))); // NOI18N
        jButton1ForAdherent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ForAdherentActionPerformed(evt);
            }
        });

        jButton1BackAdherent.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/1per1Back.png"))); // NOI18N
        jButton1BackAdherent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1BackAdherentActionPerformed(evt);
            }
        });

        jButton5BackAdherent.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/5per5Back.png"))); // NOI18N
        jButton5BackAdherent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5BackAdherentActionPerformed(evt);
            }
        });

        jButton5ForAdherent.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/5per5For.png"))); // NOI18N
        jButton5ForAdherent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ForAdherentActionPerformed(evt);
            }
        });

        jLabelNumPageAdherent.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelNumPageAdherent.setText("1");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton5BackAdherent, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1BackAdherent, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelNumPageAdherent, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1ForAdherent, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton5ForAdherent, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1BackAdherent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1ForAdherent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton5BackAdherent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton5ForAdherent, javax.swing.GroupLayout.DEFAULT_SIZE, 47, Short.MAX_VALUE)
                    .addComponent(jLabelNumPageAdherent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jComboBoxNbPerPageAdherent.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "10", "30", "50", "70", "90", "110", "130" }));
        jComboBoxNbPerPageAdherent.setSelectedIndex(1);
        jComboBoxNbPerPageAdherent.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxNbPerPageAdherentItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBoxNbPerPageAdherent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel11))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jComboBoxNbPerPageAdherent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        buttonGroupCritereRechercheAdherent.add(jRadioButtonIdAdherent);
        jRadioButtonIdAdherent.setText("Par identifiant");

        buttonGroupCritereRechercheAdherent.add(jRadioButtonPrenomAdherent);
        jRadioButtonPrenomAdherent.setText("Par prénom");

        jLabel9.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        jLabel9.setText("Critères de recherches :");

        buttonGroupCritereRechercheAdherent.add(jRadioButtonNomAdherent);
        jRadioButtonNomAdherent.setText("Par nom");

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRadioButtonIdAdherent)
                            .addComponent(jRadioButtonPrenomAdherent))
                        .addGap(18, 18, 18)
                        .addComponent(jRadioButtonNomAdherent))
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButtonIdAdherent)
                    .addComponent(jRadioButtonNomAdherent))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButtonPrenomAdherent)
                .addContainerGap())
        );

        jLabel7.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        jLabel7.setText("Recherches :");

        jLabel8.setForeground(new java.awt.Color(255, 102, 0));
        jLabel8.setText("<- Appuyer sur Entrée");

        jTextFieldSearchAdherent.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldSearchAdherentKeyTyped(evt);
            }
        });

        jLabelNbFoundAdherent.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabelNbFoundAdherent.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelNbFoundAdherent.setText("Aucun adhérent n'a été cherché");

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabelNbFoundAdherent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextFieldSearchAdherent, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel8)))
                .addContainerGap())
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jTextFieldSearchAdherent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelNbFoundAdherent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanelBarSearchAdherentLayout = new javax.swing.GroupLayout(jPanelBarSearchAdherent);
        jPanelBarSearchAdherent.setLayout(jPanelBarSearchAdherentLayout);
        jPanelBarSearchAdherentLayout.setHorizontalGroup(
            jPanelBarSearchAdherentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBarSearchAdherentLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jSeparator8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(238, Short.MAX_VALUE))
        );
        jPanelBarSearchAdherentLayout.setVerticalGroup(
            jPanelBarSearchAdherentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBarSearchAdherentLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelBarSearchAdherentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanelBarSearchAdherentLayout.createSequentialGroup()
                        .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator8)
                    .addComponent(jSeparator7))
                .addContainerGap())
        );

        jTableAdherent.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Identifiant", "Nom", "Prénom"
            }
        ));
        jTableAdherent.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableAdherentMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTableAdherent);

        javax.swing.GroupLayout jPanelAdherentLayout = new javax.swing.GroupLayout(jPanelAdherent);
        jPanelAdherent.setLayout(jPanelAdherentLayout);
        jPanelAdherentLayout.setHorizontalGroup(
            jPanelAdherentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAdherentLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        jPanelAdherentLayout.setVerticalGroup(
            jPanelAdherentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAdherentLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 390, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel12.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        jLabel12.setText("Adhérent sélectionné :");

        jLabelAdherentSelected.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelAdherentSelected.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelAdherentSelected.setText("Aucun");

        javax.swing.GroupLayout jPanelAdherentSelectedLayout = new javax.swing.GroupLayout(jPanelAdherentSelected);
        jPanelAdherentSelected.setLayout(jPanelAdherentSelectedLayout);
        jPanelAdherentSelectedLayout.setHorizontalGroup(
            jPanelAdherentSelectedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAdherentSelectedLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelAdherentSelectedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, 535, Short.MAX_VALUE)
                    .addGroup(jPanelAdherentSelectedLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabelAdherentSelected, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanelAdherentSelectedLayout.setVerticalGroup(
            jPanelAdherentSelectedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAdherentSelectedLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelAdherentSelected, javax.swing.GroupLayout.DEFAULT_SIZE, 47, Short.MAX_VALUE)
                .addContainerGap())
        );

        jButtonDelAdherent.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/Adherents/adherentDel.png"))); // NOI18N
        jButtonDelAdherent.setText("Supprimer un adhérent");
        jButtonDelAdherent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDelAdherentActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelMenuAdherentsLayout = new javax.swing.GroupLayout(jPanelMenuAdherents);
        jPanelMenuAdherents.setLayout(jPanelMenuAdherentsLayout);
        jPanelMenuAdherentsLayout.setHorizontalGroup(
            jPanelMenuAdherentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMenuAdherentsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelMenuAdherentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator11)
                    .addComponent(jPanelAdherent, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelBarSearchAdherent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanelMenuAdherentsLayout.createSequentialGroup()
                        .addComponent(jButtonAddAdherent)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonEditAdherent)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonDelAdherent)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanelAdherentSelected, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jSeparator10))
                .addContainerGap())
        );
        jPanelMenuAdherentsLayout.setVerticalGroup(
            jPanelMenuAdherentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMenuAdherentsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelMenuAdherentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jButtonDelAdherent, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE)
                    .addComponent(jButtonEditAdherent, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelAdherentSelected, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonAddAdherent, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelBarSearchAdherent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelAdherent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPanePrincipal.addTab("Adhérents", jPanelMenuAdherents);

        jButtonAddBiblio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/Admin/addAdmin.png"))); // NOI18N
        jButtonAddBiblio.setText("Ajouter un bibliothécaire");
        jButtonAddBiblio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddBiblioActionPerformed(evt);
            }
        });

        jButtonEditBiblio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/Admin/editAdmin.png"))); // NOI18N
        jButtonEditBiblio.setText("Modifier un bibliothécaire");
        jButtonEditBiblio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditBiblioActionPerformed(evt);
            }
        });

        jSeparator17.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jSeparator18.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel22.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        jLabel22.setText("Critère d'affichage :");

        jComboBoxNbPerPageBiblio.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "10", "30", "50", "70", "90", "110", "130" }));
        jComboBoxNbPerPageBiblio.setSelectedIndex(1);
        jComboBoxNbPerPageBiblio.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxNbPerPageBiblioItemStateChanged(evt);
            }
        });

        jButton1ForBiblio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/1per1For.png"))); // NOI18N
        jButton1ForBiblio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ForBiblioActionPerformed(evt);
            }
        });

        jButton1BackBiblio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/1per1Back.png"))); // NOI18N
        jButton1BackBiblio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1BackBiblioActionPerformed(evt);
            }
        });

        jButton5BackBiblio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/5per5Back.png"))); // NOI18N
        jButton5BackBiblio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5BackBiblioActionPerformed(evt);
            }
        });

        jButton5ForBiblio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/5per5For.png"))); // NOI18N
        jButton5ForBiblio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ForBiblioActionPerformed(evt);
            }
        });

        jLabelNumPageBiblio.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelNumPageBiblio.setText("1");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton5BackBiblio, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1BackBiblio, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelNumPageBiblio, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1ForBiblio, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton5ForBiblio, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1BackBiblio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1ForBiblio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton5BackBiblio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton5ForBiblio, javax.swing.GroupLayout.DEFAULT_SIZE, 47, Short.MAX_VALUE)
                    .addComponent(jLabelNumPageBiblio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jLabel23.setText("bibliothécaire par page");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBoxNbPerPageBiblio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel23))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(jComboBoxNbPerPageBiblio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        buttonGroupCritereRechercheAdherent.add(jRadioButtonIdBiblio);
        jRadioButtonIdBiblio.setText("Par identifiant");

        buttonGroupCritereRechercheAdherent.add(jRadioButtonNomBiblio);
        jRadioButtonNomBiblio.setSelected(true);
        jRadioButtonNomBiblio.setText("Par nom");

        buttonGroupCritereRechercheAdherent.add(jRadioButtonPrenomBiblio);
        jRadioButtonPrenomBiblio.setText("Par prénom");

        jLabel21.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        jLabel21.setText("Critères de recherches :");

        buttonGroupCritereRechercheAdherent.add(jRadioButtonLoginBiblio);
        jRadioButtonLoginBiblio.setText("Par login");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRadioButtonIdBiblio)
                            .addComponent(jRadioButtonPrenomBiblio))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRadioButtonNomBiblio)
                            .addComponent(jRadioButtonLoginBiblio))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel21)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButtonIdBiblio)
                    .addComponent(jRadioButtonNomBiblio))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButtonPrenomBiblio)
                    .addComponent(jRadioButtonLoginBiblio))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTextFieldSearchBiblio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldSearchBiblioKeyTyped(evt);
            }
        });

        jLabelNbFoundBiblio.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabelNbFoundBiblio.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelNbFoundBiblio.setText("Aucun bibliothécaire n'a été cherché");

        jLabel20.setForeground(new java.awt.Color(255, 102, 0));
        jLabel20.setText("<- Appuyer sur Entrée");

        jLabel19.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        jLabel19.setText("Recherches :");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabelNbFoundBiblio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextFieldSearchBiblio, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel20)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(jTextFieldSearchBiblio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelNbFoundBiblio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanelBarSearchBiblioLayout = new javax.swing.GroupLayout(jPanelBarSearchBiblio);
        jPanelBarSearchBiblio.setLayout(jPanelBarSearchBiblioLayout);
        jPanelBarSearchBiblioLayout.setHorizontalGroup(
            jPanelBarSearchBiblioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBarSearchBiblioLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jSeparator17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jSeparator18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(191, Short.MAX_VALUE))
        );
        jPanelBarSearchBiblioLayout.setVerticalGroup(
            jPanelBarSearchBiblioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBarSearchBiblioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelBarSearchBiblioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator18)
                    .addComponent(jSeparator17)
                    .addGroup(jPanelBarSearchBiblioLayout.createSequentialGroup()
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jTableBiblio.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Identifiant", "Nom", "Prénom", "Login"
            }
        ));
        jTableBiblio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableBiblioMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jTableBiblio);

        javax.swing.GroupLayout jPanelBiblioLayout = new javax.swing.GroupLayout(jPanelBiblio);
        jPanelBiblio.setLayout(jPanelBiblioLayout);
        jPanelBiblioLayout.setHorizontalGroup(
            jPanelBiblioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBiblioLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4)
                .addContainerGap())
        );
        jPanelBiblioLayout.setVerticalGroup(
            jPanelBiblioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBiblioLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 387, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel24.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        jLabel24.setText("Bibliothécaire sélectionné :");

        jLabelBiblioSelected.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelBiblioSelected.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelBiblioSelected.setText("Aucun");

        javax.swing.GroupLayout jPanelBiblioSelectedLayout = new javax.swing.GroupLayout(jPanelBiblioSelected);
        jPanelBiblioSelected.setLayout(jPanelBiblioSelectedLayout);
        jPanelBiblioSelectedLayout.setHorizontalGroup(
            jPanelBiblioSelectedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBiblioSelectedLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelBiblioSelectedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanelBiblioSelectedLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabelBiblioSelected, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanelBiblioSelectedLayout.setVerticalGroup(
            jPanelBiblioSelectedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBiblioSelectedLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel24)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelBiblioSelected, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                .addContainerGap())
        );

        jButtonDelBiblio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/Adherents/adherentDel.png"))); // NOI18N
        jButtonDelBiblio.setText("Supprimer un bibliothécaire");
        jButtonDelBiblio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDelBiblioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelMenuAdminLayout = new javax.swing.GroupLayout(jPanelMenuAdmin);
        jPanelMenuAdmin.setLayout(jPanelMenuAdminLayout);
        jPanelMenuAdminLayout.setHorizontalGroup(
            jPanelMenuAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMenuAdminLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelMenuAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator21)
                    .addComponent(jPanelBiblio, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelBarSearchBiblio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanelMenuAdminLayout.createSequentialGroup()
                        .addComponent(jButtonAddBiblio)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonEditBiblio)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonDelBiblio)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanelBiblioSelected, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jSeparator20))
                .addContainerGap())
        );
        jPanelMenuAdminLayout.setVerticalGroup(
            jPanelMenuAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMenuAdminLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelMenuAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jButtonDelBiblio, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                    .addComponent(jButtonEditBiblio, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelBiblioSelected, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonAddBiblio, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelBarSearchBiblio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelBiblio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPanePrincipal.addTab("Administration", jPanelMenuAdmin);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelDetails, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPanePrincipal)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanelDetails, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPanePrincipal))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonQuitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonQuitActionPerformed
        // TODO add your handling code here:
        this.bibliotheque.deconnecter();
    }//GEN-LAST:event_jButtonQuitActionPerformed

    private void jButtonAddBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddBookActionPerformed
        // TODO add your handling code here:
        AddBook addBook = new AddBook(this, true);
        addBook.setBooksModel(books);
        addBook.setVisible(true);
    }//GEN-LAST:event_jButtonAddBookActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        if (this.bibliothecaireConnecte == null) {
            JOptionPane.showMessageDialog(this, "Bibliothécaire inexistant ! Session invalide...", "Erreur d'authentification", JOptionPane.ERROR_MESSAGE);
            this.dispose();
        } else {
            jLabelBC.setText("Bibliothécaire connecté : " + bibliothecaireConnecte.getPrenom() + " " + bibliothecaireConnecte.getNom());
        }
        try {
            this.createAllJTable();
        } catch (Exception ex) {
            Logger.getLogger(TableauDeBord.class.getName()).log(Level.SEVERE, null, ex);
            jLabelNbFoundLivre.setText("<html><body><font color='red'>" + ex.getMessage() + "</font></body></html>");
        }
    }//GEN-LAST:event_formWindowOpened

    private void jButtonDelBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDelBookActionPerformed
        // TODO add your handling code here:
        if (!jLabelLivreSelected.getText().equals("Aucun")) {
            int answer = JOptionPane.showConfirmDialog(this, "<html><body>Êtes-vous sûr de vouloir supprimer <b>" + this.selectedL.getTitre() + "</b>, <b>" + this.selectedL.getAuteur() + "</b> de la base de données ?</body></html>");
            if (answer == 0) {
                try {
                    books.removeLivre(this.selectedL);
                } catch (Exception ex) {
                    Logger.getLogger(TableauDeBord.class.getName()).log(Level.SEVERE, null, ex);
                    jLabelNbFoundLivre.setText("<html><body><font color='red'>" + ex.getMessage() + "</font></body></html>");
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Veuillez sélectionner un livre...", "Attention", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jButtonDelBookActionPerformed

    private void jComboBoxNbPerPageLivreItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxNbPerPageLivreItemStateChanged
        // TODO add your handling code here:
        String s = (String) jComboBoxNbPerPageLivre.getSelectedItem();
        if (s != null) {
            if (books != null) {
                try {
                    this.fireJTableBooks(null, null);
                } catch (Exception ex) {
                    Logger.getLogger(TableauDeBord.class.getName()).log(Level.SEVERE, null, ex);
                    jLabelNbFoundLivre.setText("<html><body><font color='red'>" + ex.getMessage() + "</font></body></html>");
                }
            }
        }
    }//GEN-LAST:event_jComboBoxNbPerPageLivreItemStateChanged

    private void jTextFieldSearchLivreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldSearchLivreKeyTyped
        // TODO add your handling code here:
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            String toSearch = jTextFieldSearchLivre.getText();
            if (jRadioButtonAllLivre.isSelected()) {
                this.searchByMotsClesLivre(toSearch);
            } else if (jRadioButtonIdLivre.isSelected()) {
                try {
                    this.searchByIdLivre(toSearch);
                } catch (Exception ex) {
                    Logger.getLogger(TableauDeBord.class.getName()).log(Level.SEVERE, null, ex);
                    jLabelNbFoundLivre.setText("<html><body><font color='red'>" + ex.getMessage() + "</font></body></html>");
                }
            } else if (jRadioButtonAutorLivre.isSelected()) {
                try {
                    this.searchByAutorLivre(toSearch);
                } catch (Exception ex) {
                    Logger.getLogger(TableauDeBord.class.getName()).log(Level.SEVERE, null, ex);
                    jLabelNbFoundLivre.setText("<html><body><font color='red'>" + ex.getMessage() + "</font></body></html>");
                }
            } else if (jRadioButtonTitleLivre.isSelected()) {
                try {
                    this.searchByTitleLivre(toSearch);
                } catch (Exception ex) {
                    Logger.getLogger(TableauDeBord.class.getName()).log(Level.SEVERE, null, ex);
                    jLabelNbFoundLivre.setText("<html><body><font color='red'>" + ex.getMessage() + "</font></body></html>");
                }
            }
        }
    }//GEN-LAST:event_jTextFieldSearchLivreKeyTyped

    private void jButton1ForLivreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ForLivreActionPerformed
        // TODO add your handling code here:
        jLabelLivreSelected.setText("Aucun");
        int page = Integer.parseInt(jLabelNumPageLivre.getText());
        page++;
        int perpage = Integer.parseInt((String) jComboBoxNbPerPageLivre.getSelectedItem());
        int debut = (perpage * page) - perpage;
        int fin = (perpage * page);
        try {
            int rowCount = livreMetierService.getRowCount(debut, fin);
            if (((rowCount / perpage) + 1) < page) {
                page--;
            }
            if (rowCount == perpage) {
                page = 1;
            }
        } catch (Exception ex) {
            Logger.getLogger(TableauDeBord.class.getName()).log(Level.SEVERE, null, ex);
        }
        jLabelNumPageLivre.setText("" + page);
        this.fireJTableBooks(null, null);
    }//GEN-LAST:event_jButton1ForLivreActionPerformed

    private void jButton1BackLivreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1BackLivreActionPerformed
        // TODO add your handling code here:
        jLabelLivreSelected.setText("Aucun");
        int page = Integer.parseInt(jLabelNumPageLivre.getText());
        page--;
        if (page < 1) {
            page = 1;
        }
        jLabelNumPageLivre.setText("" + page);
        this.fireJTableBooks(null, null);
    }//GEN-LAST:event_jButton1BackLivreActionPerformed

    private void jButton5ForLivreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ForLivreActionPerformed
        // TODO add your handling code here:
        jLabelLivreSelected.setText("Aucun");
        int page = Integer.parseInt(jLabelNumPageLivre.getText());
        page += 4;
        int perpage = Integer.parseInt((String) jComboBoxNbPerPageLivre.getSelectedItem());
        int debut = (perpage * page) - perpage;
        int fin = (perpage * page);
        try {
            int rowCount = livreMetierService.getRowCount(debut, fin);
            if (((rowCount / perpage) + 1) < page) {
                page = (rowCount / perpage) + 1;
            }
            if (rowCount == perpage) {
                page = 1;
            }
        } catch (Exception ex) {
            Logger.getLogger(TableauDeBord.class.getName()).log(Level.SEVERE, null, ex);
        }
        jLabelNumPageLivre.setText("" + page);
        this.fireJTableBooks(null, null);
    }//GEN-LAST:event_jButton5ForLivreActionPerformed

    private void jButton5BackLivreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5BackLivreActionPerformed
        // TODO add your handling code here:
        jLabelLivreSelected.setText("Aucun");
        int page = Integer.parseInt(jLabelNumPageLivre.getText());
        page -= 5;
        if (page < 1) {
            page = 1;
        }
        jLabelNumPageLivre.setText("" + page);
        this.fireJTableBooks(null, null);
    }//GEN-LAST:event_jButton5BackLivreActionPerformed

    private void jButtonAddAdherentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddAdherentActionPerformed
        // TODO add your handling code here:
        AddAdherent addAdherent = new AddAdherent(this, true);
        addAdherent.setModelAdherent(adherents);
        addAdherent.setVisible(true);
    }//GEN-LAST:event_jButtonAddAdherentActionPerformed

    private void jButtonEditAdherentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditAdherentActionPerformed
        // TODO add your handling code here:
        if (!jLabelAdherentSelected.getText().equals("Aucun")) {
            EditAdherent editAdherent = new EditAdherent(this, true);
            editAdherent.setAdherentSelected(this.selectedA);
            editAdherent.setModelAdherent(adherents);
            editAdherent.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Veuillez sélectionner un adhérent...", "Attention", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jButtonEditAdherentActionPerformed

    private void jTextFieldSearchAdherentKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldSearchAdherentKeyTyped
        // TODO add your handling code here:
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            String toSearch = jTextFieldSearchAdherent.getText();
            if (jRadioButtonIdAdherent.isSelected()) {
                try {
                    this.searchByIdAdherent(toSearch);
                } catch (Exception ex) {
                    Logger.getLogger(TableauDeBord.class.getName()).log(Level.SEVERE, null, ex);
                    jLabelNbFoundAdherent.setText("<html><body><font color='red'>" + ex.getMessage() + "</font></body></html>");
                }
            } else if (jRadioButtonNomAdherent.isSelected()) {
                try {
                    this.searchByNomAdherent(toSearch);
                } catch (Exception ex) {
                    Logger.getLogger(TableauDeBord.class.getName()).log(Level.SEVERE, null, ex);
                    jLabelNbFoundAdherent.setText("<html><body><font color='red'>" + ex.getMessage() + "</font></body></html>");
                }
            } else if (jRadioButtonPrenomAdherent.isSelected()) {
                try {
                    this.searchByPrenomAdherent(toSearch);
                } catch (Exception ex) {
                    Logger.getLogger(TableauDeBord.class.getName()).log(Level.SEVERE, null, ex);
                    jLabelNbFoundAdherent.setText("<html><body><font color='red'>" + ex.getMessage() + "</font></body></html>");
                }
            }
        }
    }//GEN-LAST:event_jTextFieldSearchAdherentKeyTyped

    private void jComboBoxNbPerPageAdherentItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxNbPerPageAdherentItemStateChanged
        // TODO add your handling code here:
        String s = (String) jComboBoxNbPerPageAdherent.getSelectedItem();
        if (s != null) {
            if (adherents != null) {
                try {
                    this.fireJTableAdherents(null, null);
                } catch (Exception ex) {
                    Logger.getLogger(TableauDeBord.class.getName()).log(Level.SEVERE, null, ex);
                    jLabelNbFoundAdherent.setText("<html><body><font color='red'>" + ex.getMessage() + "</font></body></html>");
                }
            }
        }
    }//GEN-LAST:event_jComboBoxNbPerPageAdherentItemStateChanged

    private void jButton1ForAdherentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ForAdherentActionPerformed
        // TODO add your handling code here:
        jLabelAdherentSelected.setText("Aucun");
        int page = Integer.parseInt(jLabelNumPageAdherent.getText());
        page++;
        int perpage = Integer.parseInt((String) jComboBoxNbPerPageAdherent.getSelectedItem());
        try {
            int rowCount = adherentMetierService.getRowCount();
            if (((rowCount / perpage) + 1) < page) {
                page--;
            }
            if (rowCount == perpage) {
                page = 1;
            }
        } catch (Exception ex) {
            Logger.getLogger(TableauDeBord.class.getName()).log(Level.SEVERE, null, ex);
        }
        jLabelNumPageAdherent.setText("" + page);
        this.fireJTableAdherents(null, null);
    }//GEN-LAST:event_jButton1ForAdherentActionPerformed

    private void jButton1BackAdherentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1BackAdherentActionPerformed
        // TODO add your handling code here:
        jLabelAdherentSelected.setText("Aucun");
        int page = Integer.parseInt(jLabelNumPageAdherent.getText());
        page--;
        if (page < 1) {
            page = 1;
        }
        jLabelNumPageAdherent.setText("" + page);
        this.fireJTableAdherents(null, null);
    }//GEN-LAST:event_jButton1BackAdherentActionPerformed

    private void jButton5BackAdherentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5BackAdherentActionPerformed
        // TODO add your handling code here:
        jLabelAdherentSelected.setText("Aucun");
        int page = Integer.parseInt(jLabelNumPageAdherent.getText());
        page -= 5;
        if (page < 1) {
            page = 1;
        }
        jLabelNumPageAdherent.setText("" + page);
        this.fireJTableAdherents(null, null);
    }//GEN-LAST:event_jButton5BackAdherentActionPerformed

    private void jButton5ForAdherentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ForAdherentActionPerformed
        // TODO add your handling code here:
        jLabelAdherentSelected.setText("Aucun");
        int page = Integer.parseInt(jLabelNumPageAdherent.getText());
        page += 4;
        int perpage = Integer.parseInt((String) jComboBoxNbPerPageAdherent.getSelectedItem());
        try {
            int rowCount = adherentMetierService.getRowCount();
            if (((rowCount / perpage) + 1) < page) {
                page = (rowCount / perpage) + 1;
            }
            if (rowCount == perpage) {
                page = 1;
            }
        } catch (Exception ex) {
            Logger.getLogger(TableauDeBord.class.getName()).log(Level.SEVERE, null, ex);
        }
        jLabelNumPageAdherent.setText("" + page);
        this.fireJTableAdherents(null, null);
    }//GEN-LAST:event_jButton5ForAdherentActionPerformed

    private void jButtonDelAdherentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDelAdherentActionPerformed
        // TODO add your handling code here:
        if (!jLabelAdherentSelected.getText().equals("Aucun")) {
            int answer = JOptionPane.showConfirmDialog(this, "<html><body>Êtes-vous sûr de vouloir supprimer <b>" + this.selectedA.getPrenom() + " " + this.selectedA.getNom() + "</b> de la base de données ?</body></html>");
            if (answer == 0) {
                try {
                    adherents.removeAdherent(this.selectedA);
                } catch (Exception ex) {
                    Logger.getLogger(TableauDeBord.class.getName()).log(Level.SEVERE, null, ex);
                    jLabelNbFoundAdherent.setText("<html><body><font color='red'>" + ex.getMessage() + "</font></body></html>");
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Veuillez sélectionner un adhérent...", "Attention", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jButtonDelAdherentActionPerformed

    private void jButtonAddEmpruntActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddEmpruntActionPerformed
        // TODO add your handling code here:
        AddEmprunt addEmprunt = new AddEmprunt(this, true);
        addEmprunt.setModelEmprunt(emprunts);
        addEmprunt.setVisible(true);
    }//GEN-LAST:event_jButtonAddEmpruntActionPerformed

    private void jTextFieldSearchEmpruntKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldSearchEmpruntKeyTyped
        // TODO add your handling code here:
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            String toSearch = jTextFieldSearchEmprunt.getText();
            if (jRadioButtonIdEmprunt.isSelected()) {
                try {
                    this.searchByIdEmprunt(toSearch);
                } catch (Exception ex) {
                    Logger.getLogger(TableauDeBord.class.getName()).log(Level.SEVERE, null, ex);
                    jLabelNbFoundEmprunt.setText("<html><body><font color='red'>" + ex.getMessage() + "</font></body></html>");
                }
            } else if (jRadioButtonEmpruntByAdherent.isSelected()) {
                try {
                    this.searchByAdherentEmprunt(toSearch);
                } catch (Exception ex) {
                    Logger.getLogger(TableauDeBord.class.getName()).log(Level.SEVERE, null, ex);
                    jLabelNbFoundEmprunt.setText("<html><body><font color='red'>" + ex.getMessage() + "</font></body></html>");
                }
            } else if (jRadioButtonEmpruntByLivre.isSelected()) {
                try {
                    this.searchByLivreEmprunt(toSearch);
                } catch (Exception ex) {
                    Logger.getLogger(TableauDeBord.class.getName()).log(Level.SEVERE, null, ex);
                    jLabelNbFoundEmprunt.setText("<html><body><font color='red'>" + ex.getMessage() + "</font></body></html>");
                }
            } else if (jRadioButtonEmpruntByDate.isSelected()) {
                try {
                    this.searchByDateEmprunt(toSearch);
                } catch (Exception ex) {
                    Logger.getLogger(TableauDeBord.class.getName()).log(Level.SEVERE, null, ex);
                    jLabelNbFoundEmprunt.setText("<html><body><font color='red'>" + ex.getMessage() + "</font></body></html>");
                }
            }
        }
    }//GEN-LAST:event_jTextFieldSearchEmpruntKeyTyped

    private void jComboBoxNbPerPageEmpruntItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxNbPerPageEmpruntItemStateChanged
        // TODO add your handling code here:
        String s = (String) jComboBoxNbPerPageEmprunt.getSelectedItem();
        if (s != null) {
            if (emprunts != null) {
                try {
                    this.fireJTableEmprunt(null, null);
                } catch (Exception ex) {
                    Logger.getLogger(TableauDeBord.class.getName()).log(Level.SEVERE, null, ex);
                    jLabelNbFoundEmprunt.setText("<html><body><font color='red'>" + ex.getMessage() + "</font></body></html>");
                }
            }
        }
    }//GEN-LAST:event_jComboBoxNbPerPageEmpruntItemStateChanged

    private void jButton1ForEmpruntActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ForEmpruntActionPerformed
        // TODO add your handling code here:
        jLabelEmpruntSelected.setText("Aucun");
        int page = Integer.parseInt(jLabelNumPageEmprunt.getText());
        page++;
        int perpage = Integer.parseInt((String) jComboBoxNbPerPageEmprunt.getSelectedItem());
        try {
            int rowCount = empruntMetierService.getRowCount();
            if (((rowCount / perpage) + 1) < page) {
                page--;
            }
            if (rowCount == perpage) {
                page = 1;
            }
        } catch (Exception ex) {
            Logger.getLogger(TableauDeBord.class.getName()).log(Level.SEVERE, null, ex);
        }
        jLabelNumPageEmprunt.setText("" + page);
        this.fireJTableEmprunt(null, null);
    }//GEN-LAST:event_jButton1ForEmpruntActionPerformed

    private void jButton1BackEmpruntActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1BackEmpruntActionPerformed
        // TODO add your handling code here:
        jLabelEmpruntSelected.setText("Aucun");
        int page = Integer.parseInt(jLabelNumPageEmprunt.getText());
        page--;
        if (page < 1) {
            page = 1;
        }
        jLabelNumPageEmprunt.setText("" + page);
        this.fireJTableEmprunt(null, null);
    }//GEN-LAST:event_jButton1BackEmpruntActionPerformed

    private void jButton5BackEmpruntActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5BackEmpruntActionPerformed
        // TODO add your handling code here:
        jLabelEmpruntSelected.setText("Aucun");
        int page = Integer.parseInt(jLabelNumPageEmprunt.getText());
        page -= 5;
        if (page < 1) {
            page = 1;
        }
        jLabelNumPageEmprunt.setText("" + page);
        this.fireJTableEmprunt(null, null);
    }//GEN-LAST:event_jButton5BackEmpruntActionPerformed

    private void jButton5ForEmpruntActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ForEmpruntActionPerformed
        // TODO add your handling code here:
        jLabelEmpruntSelected.setText("Aucun");
        int page = Integer.parseInt(jLabelNumPageEmprunt.getText());
        page += 4;
        int perpage = Integer.parseInt((String) jComboBoxNbPerPageEmprunt.getSelectedItem());
        try {
            int rowCount = empruntMetierService.getRowCount();
            if (((rowCount / perpage) + 1) < page) {
                page = (rowCount / perpage) + 1;
            }
            if (rowCount == perpage) {
                page = 1;
            }
        } catch (Exception ex) {
            Logger.getLogger(TableauDeBord.class.getName()).log(Level.SEVERE, null, ex);
        }
        jLabelNumPageEmprunt.setText("" + page);
        this.fireJTableEmprunt(null, null);
    }//GEN-LAST:event_jButton5ForEmpruntActionPerformed

    private void jButtonDelEmpruntActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDelEmpruntActionPerformed
        // TODO add your handling code here:
        if (!jLabelEmpruntSelected.getText().equals("Aucun")) {
            int answer = JOptionPane.showConfirmDialog(this, "<html><body>Êtes-vous sûr de vouloir rendre <b>" + this.selectedE.getLivre() + "</b> possedé par <b>" + this.selectedE.getAdherent() + "</b> ?</body></html>");
            if (answer == 0) {
                try {
                    emprunts.removeEmprunt(this.selectedE);
                } catch (Exception ex) {
                    Logger.getLogger(TableauDeBord.class.getName()).log(Level.SEVERE, null, ex);
                    jLabelNbFoundEmprunt.setText("<html><body><font color='red'>" + ex.getMessage() + "</font></body></html>");
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Veuillez sélectionner un emprunt...", "Attention", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jButtonDelEmpruntActionPerformed

    private void jButtonEditBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditBookActionPerformed
        // TODO add your handling code here:
        if (!jLabelLivreSelected.getText().equals("Aucun")) {
            EditBook editBook = new EditBook(this, true);
            editBook.setLivreSelected(this.selectedL);
            editBook.setBooksModel(books);
            editBook.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Veuillez sélectionner un livre...", "Attention", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jButtonEditBookActionPerformed

    private void jButtonAddBiblioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddBiblioActionPerformed
        // TODO add your handling code here:
        AddBiblio addBiblio = new AddBiblio(this, true);
        addBiblio.setModelBiblio(bibliothecaires);
        addBiblio.setVisible(true);
    }//GEN-LAST:event_jButtonAddBiblioActionPerformed

    private void jButtonEditBiblioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditBiblioActionPerformed
        // TODO add your handling code here:
        if (!jLabelBiblioSelected.getText().equals("Aucun")) {
            if ((this.selectedB.getId() == MetierServiceFactory.getBibliotheque().getBibliothecaireConnecte().getId()) || (MetierServiceFactory.getBibliotheque().isSuperAdminConnected())) {
                EditBiblio editBiblio = new EditBiblio(this, true);
                editBiblio.setBibliothecaireSelected(this.selectedB);
                editBiblio.setModelBiblio(bibliothecaires);
                editBiblio.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(this, "Vous n'êtes pas autorisé à modifier ce bibliothécaire !", "Accès interdit", JOptionPane.WARNING_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Veuillez sélectionner un bibliothécaire...", "Attention", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jButtonEditBiblioActionPerformed

    private void jTextFieldSearchBiblioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldSearchBiblioKeyTyped
        // TODO add your handling code here:
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            String toSearch = jTextFieldSearchBiblio.getText();
            if (jRadioButtonIdBiblio.isSelected()) {
                try {
                    this.searchByIdBiblio(toSearch);
                } catch (Exception ex) {
                    Logger.getLogger(TableauDeBord.class.getName()).log(Level.SEVERE, null, ex);
                    jLabelNbFoundBiblio.setText("<html><body><font color='red'>" + ex.getMessage() + "</font></body></html>");
                }
            } else if (jRadioButtonNomBiblio.isSelected()) {
                try {
                    this.searchByNomBiblio(toSearch);
                } catch (Exception ex) {
                    Logger.getLogger(TableauDeBord.class.getName()).log(Level.SEVERE, null, ex);
                    jLabelNbFoundBiblio.setText("<html><body><font color='red'>" + ex.getMessage() + "</font></body></html>");
                }
            } else if (jRadioButtonPrenomBiblio.isSelected()) {
                try {
                    this.searchByPrenomBiblio(toSearch);
                } catch (Exception ex) {
                    Logger.getLogger(TableauDeBord.class.getName()).log(Level.SEVERE, null, ex);
                    jLabelNbFoundBiblio.setText("<html><body><font color='red'>" + ex.getMessage() + "</font></body></html>");
                }
            } else if (jRadioButtonLoginBiblio.isSelected()) {
                try {
                    this.searchByLoginBiblio(toSearch);
                } catch (Exception ex) {
                    Logger.getLogger(TableauDeBord.class.getName()).log(Level.SEVERE, null, ex);
                    jLabelNbFoundBiblio.setText("<html><body><font color='red'>" + ex.getMessage() + "</font></body></html>");
                }
            }
        }
    }//GEN-LAST:event_jTextFieldSearchBiblioKeyTyped

    private void jComboBoxNbPerPageBiblioItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxNbPerPageBiblioItemStateChanged
        // TODO add your handling code here:
        String s = (String) jComboBoxNbPerPageBiblio.getSelectedItem();
        if (s != null) {
            if (bibliothecaires != null) {
                try {
                    this.fireJTableBiblio(null, null);
                } catch (Exception ex) {
                    Logger.getLogger(TableauDeBord.class.getName()).log(Level.SEVERE, null, ex);
                    jLabelNbFoundBiblio.setText("<html><body><font color='red'>" + ex.getMessage() + "</font></body></html>");
                }
            }
        }
    }//GEN-LAST:event_jComboBoxNbPerPageBiblioItemStateChanged

    private void jButton1ForBiblioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ForBiblioActionPerformed
        // TODO add your handling code here:
        jLabelBiblioSelected.setText("Aucun");
        int page = Integer.parseInt(jLabelNumPageBiblio.getText());
        page++;
        int perpage = Integer.parseInt((String) jComboBoxNbPerPageBiblio.getSelectedItem());
        try {
            int rowCount = adherentMetierService.getBiblioRowCount();
            if (((rowCount / perpage) + 1) < page) {
                page--;
            }
            if (rowCount == perpage) {
                page = 1;
            }
        } catch (Exception ex) {
            Logger.getLogger(TableauDeBord.class.getName()).log(Level.SEVERE, null, ex);
        }
        jLabelNumPageBiblio.setText("" + page);
        this.fireJTableBiblio(null, null);
    }//GEN-LAST:event_jButton1ForBiblioActionPerformed

    private void jButton1BackBiblioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1BackBiblioActionPerformed
        // TODO add your handling code here:
        jLabelBiblioSelected.setText("Aucun");
        int page = Integer.parseInt(jLabelNumPageBiblio.getText());
        page--;
        if (page < 1) {
            page = 1;
        }
        jLabelNumPageBiblio.setText("" + page);
        this.fireJTableBiblio(null, null);
    }//GEN-LAST:event_jButton1BackBiblioActionPerformed

    private void jButton5BackBiblioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5BackBiblioActionPerformed
        // TODO add your handling code here:
        jLabelBiblioSelected.setText("Aucun");
        int page = Integer.parseInt(jLabelNumPageBiblio.getText());
        page -= 5;
        if (page < 1) {
            page = 1;
        }
        jLabelNumPageBiblio.setText("" + page);
        this.fireJTableBiblio(null, null);
    }//GEN-LAST:event_jButton5BackBiblioActionPerformed

    private void jButton5ForBiblioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ForBiblioActionPerformed
        // TODO add your handling code here:
        jLabelBiblioSelected.setText("Aucun");
        int page = Integer.parseInt(jLabelNumPageBiblio.getText());
        page += 4;
        int perpage = Integer.parseInt((String) jComboBoxNbPerPageBiblio.getSelectedItem());
        try {
            int rowCount = adherentMetierService.getBiblioRowCount();
            if (((rowCount / perpage) + 1) < page) {
                page = (rowCount / perpage) + 1;
            }
            if (rowCount == perpage) {
                page = 1;
            }
        } catch (Exception ex) {
            Logger.getLogger(TableauDeBord.class.getName()).log(Level.SEVERE, null, ex);
        }
        jLabelNumPageBiblio.setText("" + page);
        this.fireJTableBiblio(null, null);
    }//GEN-LAST:event_jButton5ForBiblioActionPerformed

    private void jButtonDelBiblioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDelBiblioActionPerformed
        // TODO add your handling code here:
        if (!jLabelBiblioSelected.getText().equals("Aucun")) {
            if (!MetierServiceFactory.getBibliotheque().isSuperAdminConnected()) {
                ConfSupprWithPass confSupprWithPass = new ConfSupprWithPass(this, true);
                confSupprWithPass.setBiblio(this.selectedB);
                confSupprWithPass.setModelBiblio(bibliothecaires);
                confSupprWithPass.setVisible(true);
            } else {
                int answer = JOptionPane.showConfirmDialog(this, "<html><body>Êtes-vous sûr de vouloir supprimer <font color='#FF6666'><b>" + this.selectedB.getNom() + "</b> <i>" + this.selectedB.getPrenom() + "</i></font> comme bibliothécaire ?</body></html>\n(Supprimé un bibliothécaire revient à lui donner le statut d'adhérent)");
                if (answer == 0) {
                    try {
                        bibliothecaires.removeBiblio(this.selectedB);
                    } catch (Exception ex) {
                        Logger.getLogger(TableauDeBord.class.getName()).log(Level.SEVERE, null, ex);
                        JOptionPane.showMessageDialog(this, ex.getMessage(), "Attention", JOptionPane.ERROR_MESSAGE);
                    }
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Veuillez sélectionner un bibliothécaire...", "Attention", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jButtonDelBiblioActionPerformed

    private void jTableLivresMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableLivresMouseClicked
        // TODO add your handling code here:
        int id = (int) books.getValueAt(jTableLivres.getSelectedRow(), 0);
        String auteur = (String) books.getValueAt(jTableLivres.getSelectedRow(), 1);
        String titre = (String) books.getValueAt(jTableLivres.getSelectedRow(), 2);
        boolean dispo = (boolean) books.getValueAt(jTableLivres.getSelectedRow(), 3);
        Livre livre = MetierServiceFactory.getLivreService().newLivre(auteur, titre);
        livre.setId(id);
        livre.setDisponibilite(dispo);
        this.setLivreSelected(livre);
        jLabelLivreSelected.setText("<html><body><font color='#FF6666'><b>" + titre + "</b></font>" + " - <font color='#FF6666'><i>" + auteur + "</i></font></body></html>");
    }//GEN-LAST:event_jTableLivresMouseClicked

    private void jTableEmpruntMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableEmpruntMouseClicked
        try {
            // TODO add your handling code here:
            SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
            int id = (int) emprunts.getValueAt(jTableEmprunt.getSelectedRow(), 0);
            String date = (String) emprunts.getValueAt(jTableEmprunt.getSelectedRow(), 1);
            Livre livre = (Livre) emprunts.getValueAt(jTableEmprunt.getSelectedRow(), 2);
            Adherent adherent = (Adherent) emprunts.getValueAt(jTableEmprunt.getSelectedRow(), 3);
            Emprunt emprunt = MetierServiceFactory.getEmpruntService().newEmprunt(livre, adherent);
            emprunt.setId(id);
            emprunt.setDateEmprunt(sdf.parse(date));
            this.setEmpruntSelected(emprunt);
            jLabelEmpruntSelected.setText("<html><body><font color='#FF6666'><b>" + livre + "</b></font>" + " emprunté par <font color='#FF6666'><i>" + adherent + "</i></font></body></html>");
        } catch (ParseException ex) {
            Logger.getLogger(TableauDeBord.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTableEmpruntMouseClicked

    private void jTableAdherentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableAdherentMouseClicked
        // TODO add your handling code here:
        int id = (int) adherents.getValueAt(jTableAdherent.getSelectedRow(), 0);
        String nom = (String) adherents.getValueAt(jTableAdherent.getSelectedRow(), 1);
        String prenom = (String) adherents.getValueAt(jTableAdherent.getSelectedRow(), 2);
        Adherent adherent = MetierServiceFactory.getAdherentService().newAdherent(nom, prenom);
        adherent.setId(id);
        this.setAdherentSelected(adherent);
        jLabelAdherentSelected.setText("<html><body><font color='#FF6666'><b>" + nom + "</b> <i>" + prenom + "</i></font></body></html>");
    }//GEN-LAST:event_jTableAdherentMouseClicked

    private void jTabbedPanePrincipalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPanePrincipalMouseClicked
        // TODO add your handling code here:
        this.actualisation();
    }//GEN-LAST:event_jTabbedPanePrincipalMouseClicked

    private void jTableBiblioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableBiblioMouseClicked
        // TODO add your handling code here:
        try {
            int id = (int) bibliothecaires.getValueAt(jTableBiblio.getSelectedRow(), 0);
            Bibliothecaire bibliothecaire = MetierServiceFactory.getAdherentService().getBiblioById(id);
            this.setBiblioSelected(bibliothecaire);
            jLabelBiblioSelected.setText("<html><body><font color='#FF6666'><b>" + bibliothecaire.getNom() + "</b> <i>" + bibliothecaire.getPrenom() + "</i></font> authentifié(e) par <font color='#FF6666' >" + bibliothecaire.getLogin() + "</font></body></html>");
        } catch (ParseException ex) {
            Logger.getLogger(TableauDeBord.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(TableauDeBord.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTableBiblioMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TableauDeBord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new TableauDeBord().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroupCritereRechercheAdherent;
    private javax.swing.ButtonGroup buttonGroupCritereRechercheBooks;
    private javax.swing.ButtonGroup buttonGroupCritereRechercheEmprunt;
    private javax.swing.JButton jButton1BackAdherent;
    private javax.swing.JButton jButton1BackBiblio;
    private javax.swing.JButton jButton1BackEmprunt;
    private javax.swing.JButton jButton1BackLivre;
    private javax.swing.JButton jButton1ForAdherent;
    private javax.swing.JButton jButton1ForBiblio;
    private javax.swing.JButton jButton1ForEmprunt;
    private javax.swing.JButton jButton1ForLivre;
    private javax.swing.JButton jButton5BackAdherent;
    private javax.swing.JButton jButton5BackBiblio;
    private javax.swing.JButton jButton5BackEmprunt;
    private javax.swing.JButton jButton5BackLivre;
    private javax.swing.JButton jButton5ForAdherent;
    private javax.swing.JButton jButton5ForBiblio;
    private javax.swing.JButton jButton5ForEmprunt;
    private javax.swing.JButton jButton5ForLivre;
    private javax.swing.JButton jButtonAddAdherent;
    private javax.swing.JButton jButtonAddBiblio;
    private javax.swing.JButton jButtonAddBook;
    private javax.swing.JButton jButtonAddEmprunt;
    private javax.swing.JButton jButtonDelAdherent;
    private javax.swing.JButton jButtonDelBiblio;
    private javax.swing.JButton jButtonDelBook;
    private javax.swing.JButton jButtonDelEmprunt;
    private javax.swing.JButton jButtonEditAdherent;
    private javax.swing.JButton jButtonEditBiblio;
    private javax.swing.JButton jButtonEditBook;
    private javax.swing.JButton jButtonQuit;
    private javax.swing.JComboBox jComboBoxNbPerPageAdherent;
    private javax.swing.JComboBox jComboBoxNbPerPageBiblio;
    private javax.swing.JComboBox jComboBoxNbPerPageEmprunt;
    private javax.swing.JComboBox jComboBoxNbPerPageLivre;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelAdherentSelected;
    private javax.swing.JLabel jLabelBC;
    private javax.swing.JLabel jLabelBiblioSelected;
    private javax.swing.JLabel jLabelEmpruntSelected;
    private javax.swing.JLabel jLabelLivreSelected;
    private javax.swing.JLabel jLabelNbFoundAdherent;
    private javax.swing.JLabel jLabelNbFoundBiblio;
    private javax.swing.JLabel jLabelNbFoundEmprunt;
    private javax.swing.JLabel jLabelNbFoundLivre;
    private javax.swing.JLabel jLabelNumPageAdherent;
    private javax.swing.JLabel jLabelNumPageBiblio;
    private javax.swing.JLabel jLabelNumPageEmprunt;
    private javax.swing.JLabel jLabelNumPageLivre;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JPanel jPanelAdherent;
    private javax.swing.JPanel jPanelAdherentSelected;
    private javax.swing.JPanel jPanelBarSearchAdherent;
    private javax.swing.JPanel jPanelBarSearchBiblio;
    private javax.swing.JPanel jPanelBarSearchBook;
    private javax.swing.JPanel jPanelBarSearchEmprunt;
    private javax.swing.JPanel jPanelBiblio;
    private javax.swing.JPanel jPanelBiblioSelected;
    private javax.swing.JPanel jPanelBookSelected;
    private javax.swing.JPanel jPanelDetails;
    private javax.swing.JPanel jPanelEmprunt;
    private javax.swing.JPanel jPanelEmpruntSelected;
    private javax.swing.JPanel jPanelLivres;
    private javax.swing.JPanel jPanelMenuAdherents;
    private javax.swing.JPanel jPanelMenuAdmin;
    private javax.swing.JPanel jPanelMenuEmprunts;
    private javax.swing.JPanel jPanelMenuLivres;
    private javax.swing.JRadioButton jRadioButtonAllLivre;
    private javax.swing.JRadioButton jRadioButtonAutorLivre;
    private javax.swing.JRadioButton jRadioButtonEmpruntByAdherent;
    private javax.swing.JRadioButton jRadioButtonEmpruntByDate;
    private javax.swing.JRadioButton jRadioButtonEmpruntByLivre;
    private javax.swing.JRadioButton jRadioButtonIdAdherent;
    private javax.swing.JRadioButton jRadioButtonIdBiblio;
    private javax.swing.JRadioButton jRadioButtonIdEmprunt;
    private javax.swing.JRadioButton jRadioButtonIdLivre;
    private javax.swing.JRadioButton jRadioButtonLoginBiblio;
    private javax.swing.JRadioButton jRadioButtonNomAdherent;
    private javax.swing.JRadioButton jRadioButtonNomBiblio;
    private javax.swing.JRadioButton jRadioButtonPrenomAdherent;
    private javax.swing.JRadioButton jRadioButtonPrenomBiblio;
    private javax.swing.JRadioButton jRadioButtonTitleLivre;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator10;
    private javax.swing.JSeparator jSeparator11;
    private javax.swing.JSeparator jSeparator12;
    private javax.swing.JSeparator jSeparator13;
    private javax.swing.JSeparator jSeparator15;
    private javax.swing.JSeparator jSeparator16;
    private javax.swing.JSeparator jSeparator17;
    private javax.swing.JSeparator jSeparator18;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator20;
    private javax.swing.JSeparator jSeparator21;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JTabbedPane jTabbedPanePrincipal;
    private javax.swing.JTable jTableAdherent;
    private javax.swing.JTable jTableBiblio;
    private javax.swing.JTable jTableEmprunt;
    private javax.swing.JTable jTableLivres;
    private javax.swing.JTextField jTextFieldSearchAdherent;
    private javax.swing.JTextField jTextFieldSearchBiblio;
    private javax.swing.JTextField jTextFieldSearchEmprunt;
    private javax.swing.JTextField jTextFieldSearchLivre;
    // End of variables declaration//GEN-END:variables

    public void actualisation() {
        if (jPanelEmprunt.isShowing()) {
            this.fireJTableEmprunt(null, null);
            jTextFieldSearchEmprunt.setText("");
            jLabelNbFoundEmprunt.setText("Aucun emprunt n'a été cherché");
            jLabelEmpruntSelected.setText("Aucun");
            jRadioButtonEmpruntByAdherent.setSelected(true);
        } else if (jPanelLivres.isShowing()) {
            this.fireJTableBooks(null, null);
            jTextFieldSearchLivre.setText("");
            jLabelNbFoundLivre.setText("Aucun livre n'a été cherché");
            jLabelLivreSelected.setText("Aucun");
            jRadioButtonAllLivre.setSelected(true);
        } else if (jPanelAdherent.isShowing()) {
            this.fireJTableAdherents(null, null);
            jTextFieldSearchAdherent.setText("");
            jLabelNbFoundAdherent.setText("Aucun adhérent n'a été cherché");
            jLabelAdherentSelected.setText("Aucun");
            jRadioButtonNomAdherent.setSelected(true);
        } else if (jPanelBiblio.isShowing()) {
            this.fireJTableBiblio(null, null);
            jTextFieldSearchBiblio.setText("");
            jLabelNbFoundBiblio.setText("Aucun bibliothécaire n'a été cherché");
            jLabelBiblioSelected.setText("Aucun");
            jRadioButtonNomBiblio.setSelected(true);
        }
    }

    private void createAllJTable() throws Exception {
        if (emprunts == null) {
            emprunts = new JTableModelEmprunt(0, Integer.parseInt((String) jComboBoxNbPerPageEmprunt.getSelectedItem()), 1);
        }
        jTableEmprunt.setModel(emprunts);
        TableRowSorter<TableModel> sorterEmprunt = new TableRowSorter<>(jTableEmprunt.getModel());
        jTableEmprunt.setRowSorter(sorterEmprunt);

        if (books == null) {
            books = new JTableModelBooks(0, Integer.parseInt((String) jComboBoxNbPerPageLivre.getSelectedItem()), 1);
        }
        jTableLivres.setModel(books);
        jTableLivres.setDefaultRenderer(Boolean.class, new BooleanCellRenderer());
        TableRowSorter<TableModel> sorterLivre = new TableRowSorter<>(jTableLivres.getModel());
        jTableLivres.setRowSorter(sorterLivre);
        jTableLivres.setDefaultEditor(Boolean.class, new DisponibiliteCellEditor());

        if (adherents == null) {
            adherents = new JTableModelAdherent(0, Integer.parseInt((String) jComboBoxNbPerPageAdherent.getSelectedItem()), 1);
        }
        jTableAdherent.setModel(adherents);
        TableRowSorter<TableModel> sorterAdherent = new TableRowSorter<>(jTableAdherent.getModel());
        jTableAdherent.setRowSorter(sorterAdherent);

        if (bibliothecaires == null) {
            bibliothecaires = new JTableModelBibliothecaire(0, Integer.parseInt((String) jComboBoxNbPerPageBiblio.getSelectedItem()), 1);
        }
        jTableBiblio.setModel(bibliothecaires);
        TableRowSorter<TableModel> sorterBibliothecaire = new TableRowSorter<>(jTableBiblio.getModel());
        jTableBiblio.setRowSorter(sorterBibliothecaire);

        Selected livre = new Selected(jTableEmprunt, jLabelEmpruntSelected);
        livre.start();
        Selected adherent = new Selected(jTableAdherent, jLabelAdherentSelected);
        adherent.start();
        Selected emprunt = new Selected(jTableEmprunt, jLabelEmpruntSelected);
        emprunt.start();
        Selected biblio = new Selected(jTableBiblio, jLabelBiblioSelected);
        biblio.start();
    }

    private void fireJTableBooks(List<Livre> list, Livre livre) {
        int page = Integer.parseInt(jLabelNumPageLivre.getText());
        int perpage = Integer.parseInt((String) jComboBoxNbPerPageLivre.getSelectedItem());
        int debut = (perpage * page) - perpage;
        if (list != null) {
            books = new JTableModelBooks(list, perpage, page);
            jTableLivres.setModel(books);
            TableRowSorter<TableModel> sorter = new TableRowSorter<>(jTableLivres.getModel());
            jTableLivres.setRowSorter(sorter);
        } else if (livre != null) {
            books = new JTableModelBooks(livre, perpage, page);
            jTableLivres.setModel(books);
            TableRowSorter<TableModel> sorter = new TableRowSorter<>(jTableLivres.getModel());
            jTableLivres.setRowSorter(sorter);
        } else {
            try {
                books = new JTableModelBooks(debut, perpage, page);
                jTableLivres.setModel(books);
                TableRowSorter<TableModel> sorter = new TableRowSorter<>(jTableLivres.getModel());
                jTableLivres.setRowSorter(sorter);
            } catch (Exception ex) {
                Logger.getLogger(TableauDeBord.class.getName()).log(Level.SEVERE, null, ex);
                jLabelNbFoundLivre.setText("<html><body><font color='red'>" + ex.getMessage() + "</font></body></html>");
            }
        }
    }

    private void fireJTableAdherents(List<Adherent> list, Adherent adherent) {
        int page = Integer.parseInt(jLabelNumPageAdherent.getText());
        int perpage = Integer.parseInt((String) jComboBoxNbPerPageAdherent.getSelectedItem());
        int debut = (perpage * page) - perpage;
        if (list != null) {
            adherents = new JTableModelAdherent(list, perpage, page);
            jTableAdherent.setModel(adherents);
            TableRowSorter<TableModel> sorter = new TableRowSorter<>(jTableAdherent.getModel());
            jTableAdherent.setRowSorter(sorter);
        } else if (adherent != null) {
            adherents = new JTableModelAdherent(adherent, perpage, page);
            jTableAdherent.setModel(adherents);
            TableRowSorter<TableModel> sorter = new TableRowSorter<>(jTableAdherent.getModel());
            jTableAdherent.setRowSorter(sorter);
        } else {
            try {
                adherents = new JTableModelAdherent(debut, perpage, page);
                jTableAdherent.setModel(adherents);
                TableRowSorter<TableModel> sorter = new TableRowSorter<>(jTableAdherent.getModel());
                jTableAdherent.setRowSorter(sorter);
            } catch (Exception ex) {
                Logger.getLogger(TableauDeBord.class.getName()).log(Level.SEVERE, null, ex);
                jLabelNbFoundAdherent.setText("<html><body><font color='red'>" + ex.getMessage() + "</font></body></html>");
            }
        }
    }

    private void fireJTableEmprunt(List<Emprunt> list, Emprunt emprunt) {
        int page = Integer.parseInt(jLabelNumPageEmprunt.getText());
        int perpage = Integer.parseInt((String) jComboBoxNbPerPageEmprunt.getSelectedItem());
        int debut = (perpage * page) - perpage;
        if (list != null) {
            emprunts = new JTableModelEmprunt(list, perpage, page);
            jTableEmprunt.setModel(emprunts);
            TableRowSorter<TableModel> sorter = new TableRowSorter<>(jTableEmprunt.getModel());
            jTableEmprunt.setRowSorter(sorter);
        } else if (emprunt != null) {
            emprunts = new JTableModelEmprunt(emprunt, perpage, page);
            jTableEmprunt.setModel(emprunts);
            TableRowSorter<TableModel> sorter = new TableRowSorter<>(jTableEmprunt.getModel());
            jTableEmprunt.setRowSorter(sorter);
        } else {
            try {
                emprunts = new JTableModelEmprunt(debut, perpage, page);
                jTableEmprunt.setModel(emprunts);
                TableRowSorter<TableModel> sorter = new TableRowSorter<>(jTableEmprunt.getModel());
                jTableEmprunt.setRowSorter(sorter);
            } catch (Exception ex) {
                Logger.getLogger(TableauDeBord.class.getName()).log(Level.SEVERE, null, ex);
                jLabelNbFoundEmprunt.setText("<html><body><font color='red'>" + ex.getMessage() + "</font></body></html>");
            }
        }
    }

    private void fireJTableBiblio(List<Bibliothecaire> list, Bibliothecaire bibliothecaire) {
        int page = Integer.parseInt(jLabelNumPageBiblio.getText());
        int perpage = Integer.parseInt((String) jComboBoxNbPerPageBiblio.getSelectedItem());
        int debut = (perpage * page) - perpage;
        if (list != null) {
            bibliothecaires = new JTableModelBibliothecaire(list, perpage, page);
            jTableBiblio.setModel(bibliothecaires);
            TableRowSorter<TableModel> sorter = new TableRowSorter<>(jTableBiblio.getModel());
            jTableBiblio.setRowSorter(sorter);
        } else if (bibliothecaire != null) {
            bibliothecaires = new JTableModelBibliothecaire(bibliothecaire, perpage, page);
            jTableBiblio.setModel(bibliothecaires);
            TableRowSorter<TableModel> sorter = new TableRowSorter<>(jTableBiblio.getModel());
            jTableBiblio.setRowSorter(sorter);
        } else {
            try {
                bibliothecaires = new JTableModelBibliothecaire(debut, perpage, page);
                jTableBiblio.setModel(bibliothecaires);
                TableRowSorter<TableModel> sorter = new TableRowSorter<>(jTableBiblio.getModel());
                jTableBiblio.setRowSorter(sorter);
            } catch (Exception ex) {
                Logger.getLogger(TableauDeBord.class.getName()).log(Level.SEVERE, null, ex);
                jLabelNbFoundBiblio.setText("<html><body><font color='red'>" + ex.getMessage() + "</font></body></html>");
            }
        }
    }

    private void searchByMotsClesLivre(String toSearch) {
        try {
            StringTokenizer st = new StringTokenizer(toSearch, " ");
            System.out.println(st.countTokens() + "");
            if (st.countTokens() != 0) {
                List<String> list = new ArrayList<>();
                for (int i = 0; i < st.countTokens() + 1; i++) {
                    list.add(st.nextToken());
                }
                List<Livre> byMotsClefs = livreMetierService.getByMotsClefs(list);
                if (byMotsClefs.size() > 1) {
                    jLabelNbFoundLivre.setText(byMotsClefs.size() + " livres ont été trouvés");
                    this.fireJTableBooks(byMotsClefs, null);
                } else {
                    if (byMotsClefs.size() == 1) {
                        jLabelNbFoundLivre.setText(byMotsClefs.size() + " livre a été trouvé");
                        this.fireJTableBooks(byMotsClefs, null);
                    } else {
                        jLabelNbFoundLivre.setText("Aucun livre n'a été trouvé");
                        this.fireJTableBooks(null, null);
                    }
                }
            } else {
                jLabelNbFoundLivre.setText("Aucun livre n'a été cherché");
                this.fireJTableBooks(null, null);
            }
        } catch (Exception ex) {
            Logger.getLogger(TableauDeBord.class.getName()).log(Level.SEVERE, null, ex);
            jLabelNbFoundLivre.setText("<html><body><font color='red'>" + ex.getMessage() + "</font></body></html>");
        }
    }

    private void searchByIdLivre(String toSearch) throws Exception {
        if (!toSearch.equals("")) {
            try {
                int id = Integer.parseInt(toSearch);
                Livre byId = livreMetierService.getById(id);
                if (byId != null) {
                    jLabelNbFoundLivre.setText("1 livre a été trouvé");
                    this.fireJTableBooks(null, byId);
                } else {
                    jLabelNbFoundLivre.setText("Aucun livre n'a été trouvé");
                    this.fireJTableBooks(null, null);
                }
            } catch (NumberFormatException nfe) {
                jLabelNbFoundLivre.setText("<html><body><font color='red'>Ce n'est pas un identifiant valide</font></body></html>");
            }
        } else {
            jLabelNbFoundLivre.setText("Aucun livre n'a été cherché");
            this.fireJTableBooks(null, null);
        }
    }

    private void searchByAutorLivre(String toSearch) throws Exception {
        if (!toSearch.equals("")) {
            List<Livre> byAuteur = livreMetierService.getByAuteur(toSearch);
            if (byAuteur.size() > 1) {
                jLabelNbFoundLivre.setText(byAuteur.size() + " livres ont été trouvés");
                this.fireJTableBooks(byAuteur, null);
            } else {
                if (byAuteur.size() == 1) {
                    jLabelNbFoundLivre.setText(byAuteur.size() + " livre a été trouvé");
                    this.fireJTableBooks(byAuteur, null);
                } else {
                    jLabelNbFoundLivre.setText("Aucun livre n'a été trouvé");
                    this.fireJTableBooks(null, null);
                }
            }
        } else {
            jLabelNbFoundLivre.setText("Aucun livre n'a été cherché");
            this.fireJTableBooks(null, null);
        }
    }

    private void searchByTitleLivre(String toSearch) throws Exception {
        if (!toSearch.equals("")) {
            List<Livre> byTitre = livreMetierService.getByTitre(toSearch);
            if (byTitre.size() > 1) {
                jLabelNbFoundLivre.setText(byTitre.size() + " livres ont été trouvés");
                this.fireJTableBooks(byTitre, null);
            } else {
                if (byTitre.size() == 1) {
                    jLabelNbFoundLivre.setText(byTitre.size() + " livre a été trouvé");
                    this.fireJTableBooks(byTitre, null);
                } else {
                    jLabelNbFoundLivre.setText("Aucun livre n'a été trouvé");
                    this.fireJTableBooks(null, null);
                }
            }
        } else {
            jLabelNbFoundLivre.setText("Aucun livre n'a été cherché");
            this.fireJTableBooks(null, null);
        }
    }

    private void searchByIdAdherent(String toSearch) throws Exception {
        if (!toSearch.equals("")) {
            try {
                int id = Integer.parseInt(toSearch);
                Adherent byId = adherentMetierService.getById(id);
                if (byId != null) {
                    jLabelNbFoundAdherent.setText("1 adhérent a été trouvé");
                    this.fireJTableAdherents(null, byId);
                } else {
                    jLabelNbFoundAdherent.setText("Aucun adhérent n'a été trouvé");
                    this.fireJTableAdherents(null, null);
                }
            } catch (NumberFormatException nfe) {
                jLabelNbFoundAdherent.setText("<html><body><font color='red'>Ce n'est pas un identifiant valide</font></body></html>");
            }
        } else {
            jLabelNbFoundAdherent.setText("Aucun adhérent n'a été cherché");
            this.fireJTableAdherents(null, null);
        }
    }

    private void searchByNomAdherent(String toSearch) throws Exception {
        if (!toSearch.equals("")) {
            List<Adherent> byNom = adherentMetierService.getByNom(toSearch);
            if (byNom.size() > 1) {
                jLabelNbFoundAdherent.setText(byNom.size() + " adhérents ont été trouvés");
                this.fireJTableAdherents(byNom, null);
            } else {
                if (byNom.size() == 1) {
                    jLabelNbFoundAdherent.setText(byNom.size() + " adhérent a été trouvé");
                    this.fireJTableAdherents(byNom, null);
                } else {
                    jLabelNbFoundAdherent.setText("Aucun adhérent n'a été trouvé");
                    this.fireJTableAdherents(null, null);
                }
            }
        } else {
            jLabelNbFoundAdherent.setText("Aucun adhérent n'a été cherché");
            this.fireJTableAdherents(null, null);
        }
    }

    private void searchByPrenomAdherent(String toSearch) throws Exception {
        if (!toSearch.equals("")) {
            List<Adherent> byPrenom = adherentMetierService.getByPrenom(toSearch);
            if (byPrenom.size() > 1) {
                jLabelNbFoundAdherent.setText(byPrenom.size() + " adhérents ont été trouvés");
                this.fireJTableAdherents(byPrenom, null);
            } else {
                if (byPrenom.size() == 1) {
                    jLabelNbFoundAdherent.setText(byPrenom.size() + " adhérent a été trouvé");
                    this.fireJTableAdherents(byPrenom, null);
                } else {
                    jLabelNbFoundAdherent.setText("Aucun adhérent n'a été trouvé");
                    this.fireJTableAdherents(null, null);
                }
            }
        } else {
            jLabelNbFoundAdherent.setText("Aucun adhérent n'a été cherché");
            this.fireJTableAdherents(null, null);
        }
    }

    private void searchByIdEmprunt(String toSearch) throws Exception {
        if (!toSearch.equals("")) {
            try {
                int id = Integer.parseInt(toSearch);
                Emprunt byId = empruntMetierService.getById(id);
                if (byId != null) {
                    jLabelNbFoundEmprunt.setText("1 emprunt a été trouvé");
                    this.fireJTableEmprunt(null, byId);
                } else {
                    jLabelNbFoundEmprunt.setText("Aucun emprunt n'a été trouvé");
                    this.fireJTableEmprunt(null, null);
                }
            } catch (NumberFormatException nfe) {
                jLabelNbFoundEmprunt.setText("<html><body><font color='red'>Ce n'est pas un identifiant valide</font></body></html>");
            }
        } else {
            jLabelNbFoundEmprunt.setText("Aucun emprunt n'a été cherché");
            this.fireJTableEmprunt(null, null);
        }
    }

    private void searchByAdherentEmprunt(String toSearch) throws Exception {
        if (!toSearch.equals("")) {
            List<Adherent> byNom = adherentMetierService.getByNom(toSearch);
            List<Emprunt> byAdherent = new ArrayList<>();
            for (int i = 0; i < byNom.size(); i++) {
                byAdherent.addAll(empruntMetierService.getByAdherent(byNom.get(i)));
            }
            if (byAdherent.size() > 1) {
                jLabelNbFoundEmprunt.setText(byAdherent.size() + " emprunts ont été trouvés");
                this.fireJTableEmprunt(byAdherent, null);
            } else {
                if (byAdherent.size() == 1) {
                    jLabelNbFoundEmprunt.setText(byAdherent.size() + " emprunt a été trouvé");
                    this.fireJTableEmprunt(byAdherent, null);
                } else {
                    jLabelNbFoundEmprunt.setText("Aucun emprunt n'a été trouvé");
                    this.fireJTableEmprunt(null, null);
                }
            }
        } else {
            jLabelNbFoundEmprunt.setText("Aucun emprunt n'a été cherché");
            this.fireJTableEmprunt(null, null);
        }
    }

    private void searchByLivreEmprunt(String toSearch) throws Exception {
        try {
            StringTokenizer st = new StringTokenizer(toSearch, " ");
            if (st.countTokens() != 0) {
                List<String> list = new ArrayList<>();
                for (int i = 0; i < st.countTokens() + 1; i++) {
                    list.add(st.nextToken());
                }
                List<Livre> byMotsClefs = livreMetierService.getByMotsClefs(list);
                List<Emprunt> byLivre = new ArrayList<>();
                for (int i = 0; i < byMotsClefs.size(); i++) {
                    Emprunt byLivre1 = empruntMetierService.getByLivre(byMotsClefs.get(i));
                    if (byLivre1 != null) {
                        byLivre.add(byLivre1);
                    }
                }
                if (byLivre.size() > 1) {
                    jLabelNbFoundEmprunt.setText(byLivre.size() + " emprunts ont été trouvés");
                    this.fireJTableEmprunt(byLivre, null);
                } else {
                    if (byLivre.size() == 1) {
                        jLabelNbFoundEmprunt.setText(byLivre.size() + " emprunt a été trouvé");
                        this.fireJTableEmprunt(byLivre, null);
                    } else {
                        jLabelNbFoundEmprunt.setText("Aucun emprunt n'a été trouvé");
                        this.fireJTableEmprunt(null, null);
                    }
                }
            } else {
                jLabelNbFoundEmprunt.setText("Aucun emprunt n'a été cherché");
                this.fireJTableEmprunt(null, null);
            }
        } catch (Exception ex) {
            Logger.getLogger(TableauDeBord.class.getName()).log(Level.SEVERE, null, ex);
            jLabelNbFoundEmprunt.setText("<html><body><font color='red'>" + ex.getMessage() + "</font></body></html>");
        }
    }

    private void searchByDateEmprunt(String toSearch) throws Exception {
        if (!toSearch.equals("")) {
            try {
                SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
                Date parse = sdf.parse(toSearch);
                List<Emprunt> byDate = empruntMetierService.getByDate(parse);
                if (byDate.size() > 1) {
                    jLabelNbFoundEmprunt.setText(byDate.size() + " emprunts ont été trouvés");
                    this.fireJTableEmprunt(byDate, null);
                } else {
                    if (byDate.size() == 1) {
                        jLabelNbFoundEmprunt.setText(byDate.size() + " emprunt a été trouvé");
                        this.fireJTableEmprunt(byDate, null);
                    } else {
                        jLabelNbFoundEmprunt.setText("Aucun emprunt n'a été trouvé");
                        this.fireJTableEmprunt(null, null);
                    }
                }
            } catch (ParseException e) {
                jLabelNbFoundEmprunt.setText("<html><body><font color='red'>Cette date n'est pas valide</font></body></html>");
            }
        } else {
            jLabelNbFoundEmprunt.setText("Aucun emprunt n'a été cherché");
            this.fireJTableEmprunt(null, null);
        }
    }

    private void searchByIdBiblio(String toSearch) throws Exception {
        if (!toSearch.equals("")) {
            try {
                int id = Integer.parseInt(toSearch);
                Bibliothecaire byId = adherentMetierService.getBiblioById(id);
                if (byId != null) {
                    jLabelNbFoundBiblio.setText("1 bibliothécaire a été trouvé");
                    this.fireJTableBiblio(null, byId);
                } else {
                    jLabelNbFoundBiblio.setText("Aucun bibliothécaire n'a été trouvé");
                    this.fireJTableBiblio(null, null);
                }
            } catch (NumberFormatException nfe) {
                jLabelNbFoundBiblio.setText("<html><body><font color='red'>Ce n'est pas un identifiant valide</font></body></html>");
            }
        } else {
            jLabelNbFoundBiblio.setText("Aucun bibliothécaire n'a été cherché");
            this.fireJTableBiblio(null, null);
        }
    }

    private void searchByNomBiblio(String toSearch) throws Exception {
        if (!toSearch.equals("")) {
            List<Bibliothecaire> byNom = adherentMetierService.getBiblioByNom(toSearch);
            if (byNom.size() > 1) {
                jLabelNbFoundBiblio.setText(byNom.size() + " bibliothécaires ont été trouvés");
                this.fireJTableBiblio(byNom, null);
            } else {
                if (byNom.size() == 1) {
                    jLabelNbFoundBiblio.setText(byNom.size() + " bibliothécaire a été trouvé");
                    this.fireJTableBiblio(byNom, null);
                } else {
                    jLabelNbFoundBiblio.setText("Aucun bibliothécaire n'a été trouvé");
                    this.fireJTableBiblio(null, null);
                }
            }
        } else {
            jLabelNbFoundBiblio.setText("Aucun bibliothécaire n'a été cherché");
            this.fireJTableBiblio(null, null);
        }
    }

    private void searchByPrenomBiblio(String toSearch) throws Exception {
        if (!toSearch.equals("")) {
            List<Bibliothecaire> byPrenom = adherentMetierService.getBiblioByPrenom(toSearch);
            if (byPrenom.size() > 1) {
                jLabelNbFoundBiblio.setText(byPrenom.size() + " bibliothécaires ont été trouvés");
                this.fireJTableBiblio(byPrenom, null);
            } else {
                if (byPrenom.size() == 1) {
                    jLabelNbFoundBiblio.setText(byPrenom.size() + " bibliothécaire a été trouvé");
                    this.fireJTableBiblio(byPrenom, null);
                } else {
                    jLabelNbFoundBiblio.setText("Aucun bibliothécaire n'a été trouvé");
                    this.fireJTableBiblio(null, null);
                }
            }
        } else {
            jLabelNbFoundBiblio.setText("Aucun bibliothécaire n'a été cherché");
            this.fireJTableBiblio(null, null);
        }
    }

    private void searchByLoginBiblio(String toSearch) throws Exception {
        if (!toSearch.equals("")) {
            Bibliothecaire byLogin = adherentMetierService.getByLogin(toSearch);
            if (byLogin != null) {
                jLabelNbFoundBiblio.setText("1 bibliothécaire a été trouvé");
                this.fireJTableBiblio(null, byLogin);
            } else {
                jLabelNbFoundBiblio.setText("Aucun bibliothécaire n'a été trouvé");
                this.fireJTableBiblio(null, null);
            }
        } else {
            jLabelNbFoundBiblio.setText("Aucun bibliothécaire n'a été cherché");
            this.fireJTableBiblio(null, null);
        }
    }

    public JTableModelBooks getJTableModelBooks() {
        return books;
    }

    public JTableModelAdherent getJTableModelAdherent() {
        return adherents;
    }

    public JTableModelEmprunt getJTableModelEmprunt() {
        return emprunts;
    }

    public JLabel getJLabelLivre() {
        return jLabelLivreSelected;
    }

    public JLabel getJLabelAdherent() {
        return jLabelAdherentSelected;
    }

    public JLabel getJLabelEmprunt() {
        return jLabelEmpruntSelected;
    }

    public void setLivreSelected(Livre livre) {
        this.selectedL = livre;
    }

    public void setAdherentSelected(Adherent adherent) {
        this.selectedA = adherent;
    }

    public void setEmpruntSelected(Emprunt emprunt) {
        this.selectedE = emprunt;
    }

    public void setBiblioSelected(Bibliothecaire bibliothecaire) {
        this.selectedB = bibliothecaire;
    }

    public void setStatut(String statut, String label) {
        if (label.equals("livre")) {
            jLabelNbFoundLivre.setText(statut);
        }
        if (label.equals("adherent")) {
            jLabelNbFoundAdherent.setText(statut);
        }
        if (label.equals("emprunt")) {
            jLabelNbFoundEmprunt.setText(statut);
        }
        if(label.equals("admin")) {
            jLabelNbFoundBiblio.setText(statut);
        }
    }
}